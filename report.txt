https://www.markdownguide.org/cheat-sheet/

This Python script is an inventory management system implemented in a command-line interface (CLI). It allows you to perform various actions related to buying and selling products, generating reports, and managing inventory. Here's an overview of what each function does:

1. generate_unique_id(file): Generates a unique identifier for a new entry in a CSV file.

2. add_to_inventory(file, *data): Adds data to a CSV file.

3. buy_product(product_name, quantity, price, expiry_date): Records the purchase of a product and updates the inventory.

4. sell_product(): Allows you to sell a product and update the inventory and sales records.

5. generate_reports(month, year): Generates reports on revenue and profit for a given month and year.

6. read_current_date(): Reads the current date from a file.

7. advance_time(days): Advances the current date by a specified number of days.

8. generate_inventory_report(): Generates a report of the current inventory.

9. generate_bought_report(): Generates a report of products that have been bought.

10. generate_product_status_report(): Generates a report of product status (expired or not sold).

11. main(): The main function that processes command-line arguments and performs actions based on the chosen action.

The script uses the argparse module to parse command-line arguments and the csv module to read and write data to CSV files. It also uses the rich library for improved console output, displaying tables and formatted text.

To use this script, you would run it from the command line with one of the available actions: 
-'buy', 
-'sell', 
-'generate-reports', 
-'advance-time', 
-'inventory-report', 
-'bought-report', 
-'product-status-report'. 

The script then carries out the corresponding functionality.

For more information on how to use this CLI, please see the file 'Userguide'.

To make the program more userfriendly and maintainable, it has been separated into multiple files based on the functionalities. 

1. Main Script (main.py):
- This is the entry point of your application and the script that users run.
- It should handle the command-line interface, parse arguments, and call functions from other modules as needed.
- This is where you import and use other modules.

2. Modules:
-Create separate modules for different parts of your application.
  a. inventory.py:
  Contains functions related to inventory     management, such as buying, selling, and reporting.
Functions like buy_product, sell_product, and generate_reports should go here.

  b. date_utils.py:
Contains functions related to date and time operations, like advancing time or reading the current date.

  c. csv_utils.py:
Contains functions for reading and writing CSV files, including generating unique IDs and adding data to CSV files.

  d. reports.py:
Contains functions for generating different types of reports, such as inventory reports, bought reports, and product status reports.

3. Utilities:
-You can create a folder for utility functions that can be used across different modules.
-For example, you might have utility functions for parsing dates or formatting currency values.

4. Data Files (data):
-You can store CSV data files in a separate directory, such as data. Place the CSV files, like 'bought.csv', 'inventory.csv', and 'sold.csv, here.